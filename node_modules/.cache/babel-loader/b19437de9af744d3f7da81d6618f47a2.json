{"ast":null,"code":"import _initializerDefineProperty from \"/Users/Muni/Documents/GitHub/nordai-vercel-test/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty.js\";\nimport _applyDecoratedDescriptor from \"/Users/Muni/Documents/GitHub/nordai-vercel-test/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor.js\";\nimport _initializerWarningHelper from \"/Users/Muni/Documents/GitHub/nordai-vercel-test/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper.js\";\nvar _jsxFileName = \"/Users/Muni/Documents/GitHub/nordai-vercel-test/src/Core/Tool.js\",\n  _dec,\n  _dec2,\n  _class,\n  _class2,\n  _descriptor,\n  _descriptor2,\n  _descriptor3,\n  _descriptor4,\n  _descriptor5,\n  _descriptor6,\n  _descriptor7,\n  _descriptor8,\n  _descriptor9,\n  _descriptor10;\nimport React, { Component } from 'react';\nimport { PencilIcon, ClockIcon, InformationCircleIcon, DuplicateIcon } from '@heroicons/react/outline';\nimport { Helmet } from \"react-helmet\";\nimport Header from '../Components/Header';\nimport Body, { Grid, Col } from '../Components/Body';\nimport Button from '../Components/Button';\nimport Output from '../Components/Output';\nimport Countdown from 'react-countdown';\nimport { withRouter } from 'react-router-dom';\nimport { observable, makeObservable, computed } from 'mobx';\nimport { observer, inject } from 'mobx-react';\nimport EntryTabs from '../Components/EntryTabs';\nimport EntryPrompt from '../Components/EntryPrompt';\nimport EntryInput from '../Components/EntryInput';\nimport EntryN from '../Components/EntryN';\nimport Filter from 'bad-words';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet filterBadWords = new Filter();\nlet Tool = (_dec = inject('store'), _dec2 = observable.deep, _dec(_class = observer(_class = (_class2 = class Tool extends Component {\n  constructor(props) {\n    super(props);\n    _initializerDefineProperty(this, \"tool\", _descriptor, this);\n    _initializerDefineProperty(this, \"prompts\", _descriptor2, this);\n    _initializerDefineProperty(this, \"currentPrompt\", _descriptor3, this);\n    _initializerDefineProperty(this, \"currentOption\", _descriptor4, this);\n    _initializerDefineProperty(this, \"error\", _descriptor5, this);\n    _initializerDefineProperty(this, \"output\", _descriptor6, this);\n    _initializerDefineProperty(this, \"outputs\", _descriptor7, this);\n    _initializerDefineProperty(this, \"code\", _descriptor8, this);\n    _initializerDefineProperty(this, \"loading\", _descriptor9, this);\n    _initializerDefineProperty(this, \"date\", _descriptor10, this);\n    this.countdown = [];\n    this.handleCurrentPrompt = val => {\n      this.currentPrompt = val;\n    };\n    this.checkMinimumPrompts = () => {\n      let shouldReturn = false;\n      this.prompts[this.currentPrompt].prompts.forEach((prompt, promptIndex) => {\n        if (prompt.min) {\n          if (prompt.value.length < prompt.min) {\n            shouldReturn = true;\n            prompt.error = `${prompt.title} needs to meet the minimum ${prompt.min} characters`;\n          }\n        }\n      });\n      return shouldReturn;\n    };\n    this.clearExampleTimeout = [];\n    this.onStartUsing = async () => {\n      this.loading = false;\n      this.error = \"\";\n      this.clearExampleTimeout.forEach((item, index) => {\n        clearTimeout(this.clearExampleTimeout[index]);\n      });\n      this.currentOption = \"Start\";\n    };\n    this.onExample = async () => {\n      this.loading = true;\n      this.error = \"\";\n      this.output = \"\";\n      this.outputs = [];\n      this.code = ``;\n      this.currentOption = \"Eksempel\";\n      let totalLength = 0;\n      this.clearExampleTimeout.forEach((item, index) => {\n        clearTimeout(this.clearExampleTimeout[index]);\n      });\n      this.prompts[this.currentPrompt].prompts.forEach((prompt, promptIndex) => {\n        this.prompts[this.currentPrompt].prompts[promptIndex].value = \"\";\n      });\n      this.prompts[this.currentPrompt].prompts.forEach((prompt, promptIndex) => {\n        for (let timeoutIndex = 0; timeoutIndex < prompt.example.length; timeoutIndex++) {\n          totalLength++;\n          this.clearExampleTimeout[totalLength] = setTimeout(() => {\n            this.prompts[this.currentPrompt].prompts[promptIndex].value += prompt.example[timeoutIndex];\n          }, 7 * totalLength);\n        }\n      });\n      totalLength++;\n      if (this.prompts[this.currentPrompt].example.output) {\n        this.clearExampleTimeout[totalLength] = setTimeout(() => {\n          this.output = this.prompts[this.currentPrompt].example.output;\n          totalLength++;\n          this.clearExampleTimeout[totalLength] = setTimeout(() => {\n            this.loading = false;\n            this.currentOption = \"Start\";\n            this.prompts[this.currentPrompt].prompts[0].value += \" \";\n          }, 7 * totalLength + this.prompts[this.currentPrompt].example.output.length * 7 + 500);\n        }, 7 * totalLength + 500);\n      }\n      if (this.prompts[this.currentPrompt].example.code) {\n        totalLength++;\n        this.clearExampleTimeout[totalLength] = setTimeout(() => {\n          this.code = `${this.prompts[this.currentPrompt].example.code}`;\n          this.loading = false;\n        }, 7 * totalLength + 500);\n      }\n      if (this.prompts[this.currentPrompt].example.outputs) {\n        this.clearExampleTimeout[totalLength] = setTimeout(() => {\n          this.outputs = this.prompts[this.currentPrompt].example.outputs;\n          totalLength++;\n          this.clearExampleTimeout[totalLength] = setTimeout(() => {\n            this.loading = false;\n            this.currentOption = \"Start\";\n            // this.prompts[this.currentPrompt].prompts[0].value += \" \"\n          }, 7 * totalLength + 500);\n        }, 7 * totalLength + 500);\n      }\n    };\n    this.sanitizeAllPrompts = () => {\n      this.prompts[this.currentPrompt].prompts.forEach(prompt => {\n        if (!prompt.value) {\n          return false;\n        }\n        if (prompt.type === \"number\") {\n          return false;\n        }\n        prompt.value = prompt.value.trim();\n        if (filterBadWords.isProfane(prompt.value)) {\n          prompt.error = \"Unsafe content , please try different language\";\n          throw Error(\"Unsafe content\");\n        }\n      });\n    };\n    this.contentFilterFlagged = async response => {\n      this.error = response.message;\n      this.date = Date.now() + 5000;\n      this.countdown.forEach(countdown => {\n        if (countdown) {\n          countdown.stop();\n          countdown.start();\n        }\n      });\n      this.loading = false;\n    };\n    this.checkOutput = output => {\n      if (output) {\n        output = output.replace(/^\\s+|\\s+$/g, '');\n        // output = output.replace(/\\s{2,}/g, ' ')\n      }\n\n      return output;\n    };\n    this.onGenerateClick = async () => {\n      try {\n        this.error = \"\";\n        this.output = \"\";\n        this.code = ``;\n        this.outputs = [];\n        this.loading = true;\n        let checkMinimumPrompts = this.checkMinimumPrompts();\n        if (checkMinimumPrompts) {\n          this.loading = false;\n          return false;\n        }\n        // this.sanitizeAllPrompts()\n\n        let postObj = {};\n        this.prompts[this.currentPrompt].prompts.forEach(prompt => {\n          postObj[prompt.attr] = prompt.value;\n        });\n        postObj.currentPrompt = this.prompts[this.currentPrompt].title;\n        if (this.prompts[this.currentPrompt].n) {\n          postObj.n = this.prompts[this.currentPrompt].n;\n        }\n        let response = await this.props.store.api.post(this.tool.api, postObj);\n        if (!response.data.success) {\n          this.contentFilterFlagged(response.data);\n          return false;\n        }\n        if (response.data.output) {\n          this.output = this.checkOutput(response.data.output);\n        }\n        if (response.data.code) {\n          this.code = response.data.code;\n        }\n        if (response.data.outputs) {\n          this.outputs = response.data.outputs;\n        }\n        this.date = Date.now() + 10000;\n        this.countdown.forEach(countdown => {\n          if (countdown) {\n            countdown.stop();\n            countdown.start();\n          }\n        });\n        this.loading = false;\n      } catch (error) {\n        console.log(error);\n        this.countdown.forEach(countdown => {\n          if (countdown) {\n            countdown.stop();\n            countdown.start();\n          }\n        });\n        this.loading = false;\n      }\n    };\n    makeObservable(this);\n    this.tool = this.props.store.getToolByUrl(this.props.location.pathname);\n    if (!this.tool) {\n      window.location.href = '/';\n    } else {\n      this.prompts = [...this.tool.prompts];\n    }\n  }\n  get isGenerateButtonDisabled() {\n    if (this.loading) {\n      return true;\n    }\n    return false;\n  }\n  get disabled() {\n    if (this.prompts[this.currentPrompt].prompts[0].value.length < 1) {\n      return true;\n    }\n\n    // this.prompts[this.currentPrompt].prompts[promptIndex].value\n    return false;\n  }\n  get isMinLength() {\n    if (!this.props.prompt.min) {\n      return false;\n    }\n    if (!this.props.prompt.type === \"number\") {\n      return false;\n    }\n    return false;\n  }\n  get language() {\n    let language = \"\";\n    this.prompts[this.currentPrompt].prompts.forEach(prompt => {\n      if (prompt.attr === \"language\") {\n        language = `${prompt.value}`;\n      }\n    });\n    return language;\n  }\n  render() {\n    // required for mobx to pick up deeply nested value \n    const currentValue = this.prompts[this.currentPrompt].prompts[0].value;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Helmet, {\n        children: /*#__PURE__*/_jsxDEV(\"title\", {\n          children: `${this.tool.title} Tool - Nord AI`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Header, {\n        title: this.tool.title,\n        desc: this.tool.desc,\n        Icon: this.tool.Icon,\n        fromColor: this.tool.fromColor,\n        category: this.tool.category,\n        options: [{\n          title: \"Start\",\n          Icon: PencilIcon,\n          color: this.props.store.profile.credits ? 'green' : 'red',\n          onClick: this.onStartUsing\n        }, {\n          title: \"Eksempel\",\n          color: 'blue',\n          Icon: InformationCircleIcon,\n          onClick: this.onExample\n        }],\n        currentOption: this.currentOption\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Body, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            span: \"6\",\n            children: [/*#__PURE__*/_jsxDEV(EntryTabs, {\n              prompts: this.prompts,\n              currentPrompt: this.currentPrompt,\n              onChange: this.handleCurrentPrompt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 33\n            }, this), this.prompts.map((prompt, index) => /*#__PURE__*/_jsxDEV(EntryPrompt, {\n              prompt: prompt,\n              index: index,\n              disabled: this.disabled,\n              currentPrompt: this.currentPrompt,\n              children: [prompt.prompts.map((promptInput, index) => /*#__PURE__*/_jsxDEV(EntryInput, {\n                prompt: promptInput,\n                language: this.language,\n                index: index,\n                disabled: this.disabled\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 45\n              }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"md:flex\",\n                children: [/*#__PURE__*/_jsxDEV(Countdown, {\n                  ref: countdown => this.countdown[index] = countdown,\n                  date: this.date,\n                  renderer: props => /*#__PURE__*/_jsxDEV(Button, {\n                    title: props.total ? `Timeout ${props.total / 1000} secs` : \"Generer content\",\n                    disabled: props.total || this.isGenerateButtonDisabled,\n                    Icon: props.total ? ClockIcon : currentValue ? DuplicateIcon : PencilIcon,\n                    onClick: this.onGenerateClick\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 375,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 371,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(EntryN, {\n                  prompts: this.prompts,\n                  currentPrompt: this.currentPrompt\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 382,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 37\n              }, this), this.error && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-4\",\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: `${this.error ? \"text-red-400\" : \"text-gray-400\"} font-medium transition-all`,\n                  children: this.error\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 390,\n                  columnNumber: 74\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 52\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 37\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            span: \"6\",\n            children: /*#__PURE__*/_jsxDEV(Output, {\n              title: this.tool.output.title,\n              desc: this.tool.output.desc,\n              Icon: this.tool.output.Icon || this.tool.Icon,\n              fromColor: this.tool.fromColor,\n              toColor: this.tool.toColor,\n              loading: this.loading,\n              output: this.output,\n              outputs: this.outputs,\n              code: this.code,\n              language: this.language,\n              outputsColor: this.tool.output.color,\n              OutputsIcon: this.tool.output.Icon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 30\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n}, (_descriptor = _applyDecoratedDescriptor(_class2.prototype, \"tool\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return {};\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, \"prompts\", [_dec2], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, \"currentPrompt\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return 0;\n  }\n}), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, \"currentOption\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return \"Start\";\n  }\n}), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, \"error\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return \"\";\n  }\n}), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, \"output\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return \"\";\n  }\n}), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, \"outputs\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, \"code\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return \"\";\n  }\n}), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, \"loading\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return false;\n  }\n}), _descriptor10 = _applyDecoratedDescriptor(_class2.prototype, \"date\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return Date.now() + 1000;\n  }\n}), _applyDecoratedDescriptor(_class2.prototype, \"isGenerateButtonDisabled\", [computed], Object.getOwnPropertyDescriptor(_class2.prototype, \"isGenerateButtonDisabled\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"disabled\", [computed], Object.getOwnPropertyDescriptor(_class2.prototype, \"disabled\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"isMinLength\", [computed], Object.getOwnPropertyDescriptor(_class2.prototype, \"isMinLength\"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, \"language\", [computed], Object.getOwnPropertyDescriptor(_class2.prototype, \"language\"), _class2.prototype)), _class2)) || _class) || _class);\nexport default _c = withRouter(Tool);\nvar _c;\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"names":["React","Component","PencilIcon","ClockIcon","InformationCircleIcon","DuplicateIcon","Helmet","Header","Body","Grid","Col","Button","Output","Countdown","withRouter","observable","makeObservable","computed","observer","inject","EntryTabs","EntryPrompt","EntryInput","EntryN","Filter","jsxDEV","_jsxDEV","Fragment","_Fragment","filterBadWords","Tool","_dec","_dec2","deep","_class","_class2","constructor","props","_initializerDefineProperty","_descriptor","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","_descriptor7","_descriptor8","_descriptor9","_descriptor10","countdown","handleCurrentPrompt","val","currentPrompt","checkMinimumPrompts","shouldReturn","prompts","forEach","prompt","promptIndex","min","value","length","error","title","clearExampleTimeout","onStartUsing","loading","item","index","clearTimeout","currentOption","onExample","output","outputs","code","totalLength","timeoutIndex","example","setTimeout","sanitizeAllPrompts","type","trim","isProfane","Error","contentFilterFlagged","response","message","date","Date","now","stop","start","checkOutput","replace","onGenerateClick","postObj","attr","n","store","api","post","tool","data","success","console","log","getToolByUrl","location","pathname","window","href","isGenerateButtonDisabled","disabled","isMinLength","language","render","currentValue","children","fileName","_jsxFileName","lineNumber","columnNumber","desc","Icon","fromColor","category","options","color","profile","credits","onClick","span","onChange","map","promptInput","className","ref","renderer","total","toColor","outputsColor","OutputsIcon","_applyDecoratedDescriptor","prototype","configurable","enumerable","writable","initializer","Object","getOwnPropertyDescriptor","_c","$RefreshReg$"],"sources":["/Users/Muni/Documents/GitHub/nordai-vercel-test/src/Core/Tool.js"],"sourcesContent":["import React, { Component } from 'react';\nimport {\n    PencilIcon,\n    ClockIcon,\n    InformationCircleIcon,\n    DuplicateIcon,\n  } from '@heroicons/react/outline'\n\n  import {Helmet} from \"react-helmet\";\n\nimport Header from '../Components/Header'\nimport Body, { Grid, Col } from '../Components/Body'\nimport Button from '../Components/Button'\nimport Output from '../Components/Output'\nimport Countdown from 'react-countdown';\nimport { withRouter } from 'react-router-dom'\n\nimport { observable, makeObservable, computed,  } from 'mobx'\nimport { observer, inject,  } from 'mobx-react'\n\nimport EntryTabs from '../Components/EntryTabs'\nimport EntryPrompt from '../Components/EntryPrompt'\nimport EntryInput from '../Components/EntryInput'\nimport EntryN from '../Components/EntryN'\n\nimport Filter from 'bad-words'\nlet filterBadWords = new Filter()\n\n\n@inject('store')\n@observer\nclass Tool extends Component {\n\n    @observable tool = {}\n\n\t@observable.deep prompts = []\n\t@observable currentPrompt = 0\n\t@observable currentOption = \"Start\"\n    \n    @observable error = \"\"\n\n    @observable output = \"\"\n\t@observable outputs = []\n    @observable code = \"\"\n\n\n    @observable loading = false\n    \n\t@observable date = Date.now() + 1000\n    countdown = []\n    \n    constructor(props) {\n        super(props)\n        makeObservable(this)\n        this.tool = this.props.store.getToolByUrl(this.props.location.pathname)\n        if(!this.tool){\n\t\t\twindow.location.href = '/';\n\t\t} else {\n            this.prompts = [...this.tool.prompts]\n        }\n    }\n\n    handleCurrentPrompt = (val) => {\n\t\tthis.currentPrompt = val\n\t}\n\n    @computed get isGenerateButtonDisabled(){\n\n        \n\n        if(this.loading){\n            return true\n        }\n       \n        return false\n    }\n\n    @computed get disabled(){\n\n        if(this.prompts[this.currentPrompt].prompts[0].value.length < 1){\n            return true\n        }\n\n        \n        // this.prompts[this.currentPrompt].prompts[promptIndex].value\n        return false\n    }\n\n    @computed get isMinLength() {\n\t\t\n\t\tif(!this.props.prompt.min){\n\t\t\treturn false\n\t\t}\n\t\tif(!this.props.prompt.type === \"number\"){\n\t\t\treturn false\n\t\t}\n\t\t\n\t\treturn false\n\t}\n\n    checkMinimumPrompts = () => {\n\n        let shouldReturn = false\n       \n        this.prompts[this.currentPrompt].prompts.forEach((prompt, promptIndex) => {\n            if(prompt.min){\n                if(prompt.value.length < prompt.min){\n                    shouldReturn = true\n                    prompt.error = `${prompt.title} needs to meet the minimum ${prompt.min} characters`;\n                }\n            }\n        })\n\n        return shouldReturn\n    }\n\n\n    clearExampleTimeout = []\n\n    onStartUsing  = async () => {\n        this.loading = false\n        this.error = \"\"\n        this.clearExampleTimeout.forEach((item,index) => {\n            clearTimeout(this.clearExampleTimeout[index])\n        })\n        this.currentOption = \"Start\"\n    }\n\n    onExample = async () => {\n        this.loading = true\n        this.error = \"\"\n        this.output = \"\"\n        this.outputs = []\n        this.code = ``\n\n        this.currentOption = \"Eksempel\"\n\n        let totalLength = 0;\n\n        this.clearExampleTimeout.forEach((item,index) => {\n            clearTimeout(this.clearExampleTimeout[index])\n        })\n        \n        this.prompts[this.currentPrompt].prompts.forEach((prompt, promptIndex) => {\n            this.prompts[this.currentPrompt].prompts[promptIndex].value = \"\"\n        })\n\n        this.prompts[this.currentPrompt].prompts.forEach((prompt, promptIndex) => {\n            for (let timeoutIndex = 0; timeoutIndex < prompt.example.length; timeoutIndex++) {\n                totalLength++\n                this.clearExampleTimeout[totalLength] = setTimeout(()=> {\n                    this.prompts[this.currentPrompt].prompts[promptIndex].value += prompt.example[timeoutIndex]\n                }, 7 * totalLength)\n            }\n        })\n\n\n      \n        totalLength++\n        \n        if(this.prompts[this.currentPrompt].example.output){\n            this.clearExampleTimeout[totalLength] = setTimeout(()=> {\n                this.output =  this.prompts[this.currentPrompt].example.output\n                totalLength++\n                this.clearExampleTimeout[totalLength] = setTimeout(()=> {\n                    this.loading = false\n                    this.currentOption = \"Start\"\n                    this.prompts[this.currentPrompt].prompts[0].value += \" \"\n                }, 7 * totalLength + this.prompts[this.currentPrompt].example.output.length * 7 + 500 )\n    \n            }, (7 * totalLength) + 500)\n        }\n\n        if(this.prompts[this.currentPrompt].example.code){\n            totalLength++\n            this.clearExampleTimeout[totalLength] = setTimeout(()=> {\n                this.code = `${this.prompts[this.currentPrompt].example.code}`\n                this.loading = false\n            }, (7 * totalLength) + 500)\n        }\n\n        if(this.prompts[this.currentPrompt].example.outputs){\n            this.clearExampleTimeout[totalLength] = setTimeout(()=> {\n                this.outputs =  this.prompts[this.currentPrompt].example.outputs\n    \n                totalLength++\n                this.clearExampleTimeout[totalLength] = setTimeout(()=> {\n                    this.loading = false\n                    this.currentOption = \"Start\"\n                    // this.prompts[this.currentPrompt].prompts[0].value += \" \"\n                }, 7 * totalLength + 500)\n    \n            }, (7 * totalLength) + 500)\n        }\n       \n\n    }\n\n\n    sanitizeAllPrompts = () => {\n        this.prompts[this.currentPrompt].prompts.forEach((prompt) => {\n            if(!prompt.value){\n                return false;\n            }\n            if(prompt.type === \"number\"){\n                return false;\n            }\n           \n            prompt.value = prompt.value.trim()\n\n            if(filterBadWords.isProfane(prompt.value)){\n                prompt.error = \"Unsafe content , please try different language\"\n                throw Error(\"Unsafe content\")\n            }\n        })\n\t}\n\n    contentFilterFlagged = async (response) => {\n        this.error = response.message\n\n        this.date = Date.now() + 5000\n        this.countdown.forEach(countdown => {\n            if(countdown){\n                countdown.stop()\n                countdown.start()\n            }\n        })\n        this.loading = false\n    }\n\n    checkOutput = (output) => {\n\t\tif(output){\n\t\t\toutput = output.replace(/^\\s+|\\s+$/g, '')\n            // output = output.replace(/\\s{2,}/g, ' ')\n\t\t}\n\t\treturn output\n\t}\n\n    @computed get language(){\n        let language = \"\"\n        this.prompts[this.currentPrompt].prompts.forEach(prompt => {\n            if(prompt.attr === \"language\"){\n                language = `${prompt.value}`\n            }\n        })\n        return language\n    }\n\n    onGenerateClick = async () => {\n        try {\n            this.error = \"\"\n            this.output = \"\"\n            this.code = ``\n            this.outputs = []\n            this.loading = true\n\n            let checkMinimumPrompts = this.checkMinimumPrompts()\n            if(checkMinimumPrompts){\n                this.loading = false\n                return false\n            }\n            // this.sanitizeAllPrompts()\n\n            let postObj = {} \n\n            this.prompts[this.currentPrompt].prompts.forEach((prompt) => {\n                postObj[prompt.attr] = prompt.value\n            })\n\n            postObj.currentPrompt = this.prompts[this.currentPrompt].title\n            if(this.prompts[this.currentPrompt].n){\n                postObj.n = this.prompts[this.currentPrompt].n\n            }\n\n            let response = await this.props.store.api\n                .post(this.tool.api, postObj)\n\n            if(!response.data.success){\n                this.contentFilterFlagged(response.data)\n                return false\n            }\n\n            if(response.data.output){\n                this.output = this.checkOutput(response.data.output)\n            }\n\n            if(response.data.code){\n                this.code = response.data.code\n            }\n\n            if(response.data.outputs){\n                this.outputs = response.data.outputs\n            }\n            \n            this.date = Date.now() + 10000\n            this.countdown.forEach(countdown => {\n                if(countdown){\n                    countdown.stop()\n                    countdown.start()\n                }\n            })\n            this.loading = false\n        } catch (error){\n            console.log(error)\n            this.countdown.forEach(countdown => {\n                if(countdown){\n                    countdown.stop()\n                    countdown.start()\n                }\n            })\n            this.loading = false\n        }\n    }\n\n        render() {\n\n            // required for mobx to pick up deeply nested value \n            const currentValue = this.prompts[this.currentPrompt].prompts[0].value\n\n            return(\n                <>\n                <Helmet>\n                    <title>{`${this.tool.title} Tool - Nord AI`}</title>\n                </Helmet>\n                <Header \n                    title={this.tool.title}\n                    desc={this.tool.desc}\n                    Icon={this.tool.Icon}\n\t\t\t\t\tfromColor={this.tool.fromColor}\n\t\t\t\t\tcategory={this.tool.category}\n                    \n                    options={[\n                        {   title: \"Start\", \n                            Icon: PencilIcon, \n                            color: this.props.store.profile.credits ? 'green' : 'red',\n                            onClick: this.onStartUsing \n                        },\n                        { title: \"Eksempel\", color: 'blue', Icon: InformationCircleIcon, onClick: this.onExample},\n                    ]}\n                    currentOption={this.currentOption}\n                />\n                <Body>\n                        <Grid>\n                            <Col span=\"6\">\n\n                                <EntryTabs\n                                    prompts={this.prompts}\n                                    currentPrompt={this.currentPrompt}\n                                    onChange={this.handleCurrentPrompt}\n                                />\n\n                                {this.prompts.map((prompt, index) => \n                                    <EntryPrompt\n                                        prompt={prompt} \n                                        key={index} \n                                        index={index}\n                                        disabled={this.disabled}\n                                        currentPrompt={this.currentPrompt}\n                                    >\n                                        {prompt.prompts.map((promptInput, index) => \n                                            <EntryInput\n                                                prompt={promptInput}\n                                                key={index}\n                                                language={this.language}\n                                                index={index}\n                                                disabled={this.disabled}\n                                            />)}\n\n\n                                    <div className=\"md:flex\">\n                                        <Countdown \n                                            ref={countdown => this.countdown[index] = countdown} \n                                            date={this.date} \n                                            renderer={props => \n                                            <Button \n                                                title={props.total ? `Timeout ${props.total/1000} secs` : \"Generer content\"}\n                                                disabled={props.total || this.isGenerateButtonDisabled}\n                                                Icon={props.total ? ClockIcon : currentValue ? DuplicateIcon : PencilIcon} \n                                                onClick={this.onGenerateClick} \n                                            />} \n                                        /> \n                                        <EntryN \n                                            prompts={this.prompts} \n                                            currentPrompt={this.currentPrompt}\n                                        />\n                                    </div>\n\n\n\n                                    {this.error && <div className=\"mt-4\"><label \n                                        className={`${this.error ? \"text-red-400\" : \"text-gray-400\"} font-medium transition-all`}>\n                                            {this.error}\n                                    </label></div>}\n\n                                    </EntryPrompt>\n                                )}\n\n                               \n                            </Col>\n                            <Col span=\"6\">\n                             <Output \n                                    title={this.tool.output.title}\n                                    desc={this.tool.output.desc}\n\n                                    Icon={this.tool.output.Icon || this.tool.Icon}\n                                    fromColor={this.tool.fromColor}\n\t\t\t\t\t\t\t\t\ttoColor={this.tool.toColor}\n                                    \n                                    loading={this.loading}\n                                    output={this.output}\n\t\t\t\t\t\t\t\t\toutputs={this.outputs}\n                                    code={this.code}\n                                    language={this.language}\n                                    \n                                    outputsColor={this.tool.output.color}\n                                    OutputsIcon={this.tool.output.Icon}\n                            /> \n                        </Col> \n                    </Grid> \n                </Body>\n            </>\n        )\n    }\n}\n\n\nexport default withRouter(Tool)"],"mappings":"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"},"metadata":{},"sourceType":"module"}